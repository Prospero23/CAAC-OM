; OM File Header - Saved 2023/05/01 12:10:02
; (7.01 :patc (om-make-point 172 160) (om-make-point 50 50) (om-make-point 729 661) "" 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote ("Chaos")))(setf *om-current-persistent* (om-load-patch1 "007-chaos-fractalmipoint" (quote ((let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 514 328) (om-make-point 27 30) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 2" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 316 381) (om-make-point 220 172) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 50.0 100.0 150.0 200.0 250.0 300.0 350.0 400.0 450.0 500.0 550.0 600.0 650.0 700.0 750.0 800.0 850.0 900.0 950.0 1000.0 1050.0 1100.0 1150.0 1200.0 1250.0 1300.0 1350.0 1400.0 1450.0 1500.0 1550.0 1600.0 1650.0 1700.0 1750.0 1800.0 1850.0 1900.0 1950.0 2000.0)) (quote (0.1 0.226 0.352 0.671 0.991 1.004 1.017 0.993 0.969 1.01 1.052 0.975 0.898 1.026 1.154 0.905 0.655 0.972 1.288 0.769 0.25 0.513 0.776 1.02 1.263 0.798 0.333 0.644 0.955 1.015 1.075 0.962 0.848 1.029 1.209 0.856 0.502 0.852 1.202 0.862 0.521)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPF 2") newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 364 205) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 311 201) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 252 219) (om-make-point 20 25) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 80 52) (om-make-point 129 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 100.0 200.0 300.0 400.0 500.0 600.0 700.0 800.0 900.0 1000.0 1100.0 1200.0 1300.0 1400.0 1500.0 1600.0 1700.0 1800.0 1900.0 2000.0)) (quote (0.1 0.352 0.991 1.017 0.969 1.052 0.898 1.154 0.655 1.288 0.25 0.776 1.263 0.333 0.955 1.075 0.848 1.209 0.502 1.202 0.521)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPF") newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MIDPOINT1" (quote alea::midpoint1) (quote ((om-load-inputfun (quote input-funbox) "list seed" "LISTE1" nil) (om-load-inputfun (quote input-funbox) "recursive deep of calculus" "NIVEAUX" 1) (om-load-inputfun (quote input-funbox) "alea pourcent variation in the x axis" "PRC-X" 0) (om-load-inputfun (quote input-funbox) "alea pourcent variation in the y axis" "PRC-Y" 0))) (om-make-point 193 251) (om-make-point 199 59) nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 1 1 1 nil 0) (6 2 1 2 nil 0) (0 0 1 3 nil 0) (5 0 6 0 nil 0) (4 0 6 1 nil 0) (3 0 6 2 nil 0) (2 0 6 3 nil 0))) nil 7.01))
