; OM File Header - Saved 2023/03/10 12:01:29
; (7.01 :patc (om-make-point 10 210) (om-make-point 50 50) (om-make-point 839 651) "" 183 0 nil "2023/02/22 13:39:41")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"../005/008-intro-to-Brownian-motion.omp\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "009-Brownian-motion-realization" (quote ((let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 164 258) (om-make-point 473 365) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7300) (7500) (7400) (7200) (7400) (7500) (7600) (7500) (7200) (7000) (6800) (6900) (6800) (6900) (7000) (7100) (7200) (7300) (7500) (7300) (7200) (7100) (7000) (7200) (7300) (7500) (7400) (7300) (7400) (7200) (7000) (6900) (6800) (6900) (7000) (6900) (7100) (7200) (7400) (7500) (7300) (6900) (6800) (6700) (6800) (6900) (6800) (6700) (6500) (6600) (6500) (6600) (6500) (6400) (6100) (6000) (6100) (6300) (6200) (6300) (6200) (6000) (6100) (6000) (5800) (6100) (6200) (6300) (6200) (6400) (6700) (6900) (7000) (6900) (7100) (7200) (7300) (7500) (7600) (7700) (7500) (7600) (7500) (7400) (7200) (7000) (7100) (7200) (7300) (7500) (7400) (7200) (7400) (7500) (7200) (7300) (7400) (7200) (7100) (7000) (6900) (6700) (6800) (7000) (7200) (7300) (7400) (7500) (7300) (7400) (7300) (7400) (7200) (7000) (6900) (7100) (7000) (6900) (7000) (7100) (7200) (7400) (7500) (7400) (7200) (7300) (7400) (7300) (7400) (7300) (7200) (7400) (7500) (7100) (7200) (7300) (7200) (7300) (7100) (7000) (7100) (7000) (6900) (7000))) :lonset (quote (0 100 200 500 600 700 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1900 2000 2100 2200 2300 2400 2600 2700 2800 2900 3200 3500 3700 3800 3900 4000 4100 4200 4300 4400 4500 4600 4700 4800 5000 5100 5200 5300 5400 5600 5700 5900 6100 6300 6400 6500 6600 6700 7000 7200 7300 7400 7500 7700 7800 7900 8000 8100 8400 8500 8700 8800 8900 9100 9300 9400 9600 9700 9800 9900 10100 10200 10300 10400 10500 10600 10900 11100 11300 11400 11600 11700 12000 12100 12400 12600 12700 12800 12900 13100 13300 13400 13500 13700 14000 14100 14200 14300 14500 14600 14700 14800 14900 15100 15300 15400 15500 15700 15800 15900 16100 16300 16500 16600 16700 16800 16900 17100 17200 17300 17400 17500 17700 18000 18100 18200 18300 18400 18500 18700 18900 19000 19200 19400 19800 19900 20000 20100 20200 21200)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7100) (7200) (7000) (7100) (7000) (7100) (7200) (7100) (7200) (7100) (7300) (7200) (7100) (7300) (7500) (7400) (7500) (7600) (7800) (7900) (7700) (7800) (7900) (7700) (7800) (7600) (7700) (7800) (7700) (7600) (7800) (8000) (7900) (7800) (8000) (8100) (8200) (8000) (7900) (7800) (7600) (7500) (7600) (7800) (7900) (8100) (8200) (8300) (8500) (8600) (8500) (8700) (8800) (8900) (8800) (9000) (8900) (9000) (8900) (8800) (8900) (8800) (9000) (8900) (8800) (8500) (8400) (8500) (8600) (8300) (8400) (8500) (8600) (8400) (8200) (8300) (8400) (8300) (8400) (8300) (8400) (8500) (8600) (8500) (8400) (8600) (8700) (8800) (9000) (8700) (8500) (8700) (8600) (8400) (8500) (8400) (8500) (8700) (8600) (8500) (8400) (8300) (8200) (8100) (7800) (7900) (8100) (7900) (7800) (7900) (8000) (8100) (8000) (7900) (8000) (8100) (7800) (7700) (7800) (7900) (7800) (7900) (7800) (7700) (7900) (8100) (7900) (7700) (7800) (7700) (7800) (7900) (7800) (7700) (7500) (7200) (7400) (7600) (7400) (7600) (7800) (7600) (7500) (7400))) :lonset (quote (0 200 400 500 700 800 900 1000 1100 1200 1400 1600 1700 1800 1900 2100 2200 2400 2600 2700 2800 3000 3200 3300 3400 3500 3600 3900 4000 4200 4300 4400 4500 4600 4700 4800 4900 5000 5200 5400 5500 5600 5800 6000 6200 6300 6400 6500 6600 6700 6900 7000 7200 7300 7500 7600 7700 7900 8000 8100 8300 8400 8500 8800 8900 9000 9100 9200 9300 9400 9500 9600 9700 9800 9900 10100 10200 10300 10400 10500 10600 10700 10900 11100 11300 11400 11500 11700 11800 12100 12200 12300 12400 12600 12800 13000 13100 13200 13400 13600 13800 14000 14200 14300 14400 14600 14800 14900 15000 15200 15300 15400 15500 15600 15700 15800 15900 16100 16200 16300 16400 16500 16600 16700 16800 16900 17000 17100 17200 17400 17500 17700 17800 18000 18200 18400 18500 18600 18700 18900 19000 19200 19300 19500 19700 20700)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7000) (6800) (6700) (6800) (7000) (6900) (7000) (6800) (6900) (7000) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6100) (6000) (6100) (5800) (5700) (5800) (5700) (5600) (5800) (5700) (5800) (6000) (6100) (6300) (6200) (6100) (6400) (6500) (6300) (6200) (6300) (6100) (6200) (6100) (6300) (6400) (6600) (6500) (6400) (6300) (6500) (6700) (6900) (7000) (6900) (6800) (7000) (6900) (6800) (6700) (6600) (6200) (6100) (6200) (6000) (5900) (5500) (5400) (5600) (5500) (5300) (5400) (5500) (5700) (5600) (5500) (5400) (5300) (5500) (5600) (5700) (5800) (5700) (5900) (6000) (5900) (5700) (6000) (5900) (5800) (5700) (5800) (5700) (5600) (5500) (5600) (5700) (5800) (5600) (5800) (5600) (5500) (5600) (5500) (5600) (5500) (5600) (5500) (5600) (5700) (5900) (6100) (6200) (6300) (6000) (5900) (6000) (6300) (6400) (6500) (6600) (6500) (6600) (6500) (6400) (6300) (6500) (6600) (6700) (6400) (6300) (6400) (6300) (6400) (6500) (6400) (6200) (6400) (6700) (6600) (6400) (6500) (6400) (6500) (6600) (6500) (6600))) :lonset (quote (0 100 300 400 600 700 900 1000 1200 1300 1400 1500 1700 1800 1900 2000 2100 2200 2300 2500 2600 2700 2800 3000 3100 3300 3400 3500 3600 3700 3900 4000 4200 4300 4400 4500 4700 4800 4900 5000 5200 5300 5400 5500 5600 5700 5900 6000 6300 6400 6600 6700 6800 6900 7100 7300 7400 7500 7700 7800 7900 8100 8200 8300 8400 8500 8700 9000 9400 9500 9600 9700 10000 10200 10300 10400 10600 10800 10900 11000 11100 11200 11600 11700 11800 12000 12200 12300 12500 12600 12800 12900 13100 13200 13300 13400 13500 13600 13800 13900 14100 14200 14300 14500 14600 14700 14800 14900 15000 15100 15200 15300 15400 15500 15600 15800 15900 16000 16200 16300 16400 16600 16700 16900 17000 17100 17300 17500 17600 17700 17900 18000 18100 18200 18400 18500 18600 18800 18900 19000 19100 19200 19300 19500 19600 20600)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.01 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 25) (om-make-point 865 443) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (2 2 2))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggff) (quote ggff) (quote ggff)) 24 2)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 254 108) (om-make-point 24 36) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 184 146) nil (list (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7300) (7500) (7400) (7200) (7400) (7500) (7600) (7500) (7200) (7000) (6800) (6900) (6800) (6900) (7000) (7100) (7200) (7300) (7500) (7300) (7200) (7100) (7000) (7200) (7300) (7500) (7400) (7300) (7400) (7200) (7000) (6900) (6800) (6900) (7000) (6900) (7100) (7200) (7400) (7500) (7300) (6900) (6800) (6700) (6800) (6900) (6800) (6700) (6500) (6600) (6500) (6600) (6500) (6400) (6100) (6000) (6100) (6300) (6200) (6300) (6200) (6000) (6100) (6000) (5800) (6100) (6200) (6300) (6200) (6400) (6700) (6900) (7000) (6900) (7100) (7200) (7300) (7500) (7600) (7700) (7500) (7600) (7500) (7400) (7200) (7000) (7100) (7200) (7300) (7500) (7400) (7200) (7400) (7500) (7200) (7300) (7400) (7200) (7100) (7000) (6900) (6700) (6800) (7000) (7200) (7300) (7400) (7500) (7300) (7400) (7300) (7400) (7200) (7000) (6900) (7100) (7000) (6900) (7000) (7100) (7200) (7400) (7500) (7400) (7200) (7300) (7400) (7300) (7400) (7300) (7200) (7400) (7500) (7100) (7200) (7300) (7200) (7300) (7100) (7000) (7100) (7000) (6900) (7000))) :lonset (quote (0 100 200 500 600 700 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1900 2000 2100 2200 2300 2400 2600 2700 2800 2900 3200 3500 3700 3800 3900 4000 4100 4200 4300 4400 4500 4600 4700 4800 5000 5100 5200 5300 5400 5600 5700 5900 6100 6300 6400 6500 6600 6700 7000 7200 7300 7400 7500 7700 7800 7900 8000 8100 8400 8500 8700 8800 8900 9100 9300 9400 9600 9700 9800 9900 10100 10200 10300 10400 10500 10600 10900 11100 11300 11400 11600 11700 12000 12100 12400 12600 12700 12800 12900 13100 13300 13400 13500 13700 14000 14100 14200 14300 14500 14600 14700 14800 14900 15100 15300 15400 15500 15700 15800 15900 16100 16300 16500 16600 16700 16800 16900 17100 17200 17300 17400 17500 17700 18000 18100 18200 18300 18400 18500 18700 18900 19000 19200 19400 19800 19900 20000 20100 20200 21200)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7100) (7200) (7000) (7100) (7000) (7100) (7200) (7100) (7200) (7100) (7300) (7200) (7100) (7300) (7500) (7400) (7500) (7600) (7800) (7900) (7700) (7800) (7900) (7700) (7800) (7600) (7700) (7800) (7700) (7600) (7800) (8000) (7900) (7800) (8000) (8100) (8200) (8000) (7900) (7800) (7600) (7500) (7600) (7800) (7900) (8100) (8200) (8300) (8500) (8600) (8500) (8700) (8800) (8900) (8800) (9000) (8900) (9000) (8900) (8800) (8900) (8800) (9000) (8900) (8800) (8500) (8400) (8500) (8600) (8300) (8400) (8500) (8600) (8400) (8200) (8300) (8400) (8300) (8400) (8300) (8400) (8500) (8600) (8500) (8400) (8600) (8700) (8800) (9000) (8700) (8500) (8700) (8600) (8400) (8500) (8400) (8500) (8700) (8600) (8500) (8400) (8300) (8200) (8100) (7800) (7900) (8100) (7900) (7800) (7900) (8000) (8100) (8000) (7900) (8000) (8100) (7800) (7700) (7800) (7900) (7800) (7900) (7800) (7700) (7900) (8100) (7900) (7700) (7800) (7700) (7800) (7900) (7800) (7700) (7500) (7200) (7400) (7600) (7400) (7600) (7800) (7600) (7500) (7400))) :lonset (quote (0 200 400 500 700 800 900 1000 1100 1200 1400 1600 1700 1800 1900 2100 2200 2400 2600 2700 2800 3000 3200 3300 3400 3500 3600 3900 4000 4200 4300 4400 4500 4600 4700 4800 4900 5000 5200 5400 5500 5600 5800 6000 6200 6300 6400 6500 6600 6700 6900 7000 7200 7300 7500 7600 7700 7900 8000 8100 8300 8400 8500 8800 8900 9000 9100 9200 9300 9400 9500 9600 9700 9800 9900 10100 10200 10300 10400 10500 10600 10700 10900 11100 11300 11400 11500 11700 11800 12100 12200 12300 12400 12600 12800 13000 13100 13200 13400 13600 13800 14000 14200 14300 14400 14600 14800 14900 15000 15200 15300 15400 15500 15600 15700 15800 15900 16100 16200 16300 16400 16500 16600 16700 16800 16900 17000 17100 17200 17400 17500 17700 17800 18000 18200 18400 18500 18600 18700 18900 19000 19200 19300 19500 19700 20700)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7000) (6800) (6700) (6800) (7000) (6900) (7000) (6800) (6900) (7000) (6900) (6700) (6600) (6700) (6600) (6400) (6200) (6100) (6000) (6100) (5800) (5700) (5800) (5700) (5600) (5800) (5700) (5800) (6000) (6100) (6300) (6200) (6100) (6400) (6500) (6300) (6200) (6300) (6100) (6200) (6100) (6300) (6400) (6600) (6500) (6400) (6300) (6500) (6700) (6900) (7000) (6900) (6800) (7000) (6900) (6800) (6700) (6600) (6200) (6100) (6200) (6000) (5900) (5500) (5400) (5600) (5500) (5300) (5400) (5500) (5700) (5600) (5500) (5400) (5300) (5500) (5600) (5700) (5800) (5700) (5900) (6000) (5900) (5700) (6000) (5900) (5800) (5700) (5800) (5700) (5600) (5500) (5600) (5700) (5800) (5600) (5800) (5600) (5500) (5600) (5500) (5600) (5500) (5600) (5500) (5600) (5700) (5900) (6100) (6200) (6300) (6000) (5900) (6000) (6300) (6400) (6500) (6600) (6500) (6600) (6500) (6400) (6300) (6500) (6600) (6700) (6400) (6300) (6400) (6300) (6400) (6500) (6400) (6200) (6400) (6700) (6600) (6400) (6500) (6400) (6500) (6600) (6500) (6600))) :lonset (quote (0 100 300 400 600 700 900 1000 1200 1300 1400 1500 1700 1800 1900 2000 2100 2200 2300 2500 2600 2700 2800 3000 3100 3300 3400 3500 3600 3700 3900 4000 4200 4300 4400 4500 4700 4800 4900 5000 5200 5300 5400 5500 5600 5700 5900 6000 6300 6400 6600 6700 6800 6900 7100 7300 7400 7500 7700 7800 7900 8100 8200 8300 8400 8500 8700 9000 9400 9500 9600 9700 10000 10200 10300 10400 10600 10800 10900 11000 11100 11200 11600 11700 11800 12000 12200 12300 12500 12600 12800 12900 13100 13200 13300 13400 13500 13600 13800 13900 14100 14200 14300 14500 14600 14700 14800 14900 15000 15100 15200 15300 15400 15500 15600 15800 15900 16000 16200 16300 16400 16600 16700 16900 17000 17100 17300 17500 17600 17700 17900 18000 18100 18200 18400 18500 18600 18800 18900 19000 19100 19200 19300 19500 19600 20600)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))) "x" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "008-intro-to-Brownian-motion" (quote ("elements" "005" "008-intro-to-Brownian-motion")) (quote nil) (om-make-point 104 38) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 0 1 nil 0) (3 0 2 0 nil 0) (1 0 2 1 nil 0))) nil 7.01))
