; OM File Header - Saved 2023/05/01 10:50:28
; (7.01 :patc (om-make-point 40 40) (om-make-point 50 50) (om-make-point 817 524) "" 183 0 "2023/05/01 10:11:50" "2023/05/01 10:12:58")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"../l-system.omp\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "l-system-algae-patch" (quote ((let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 530 124) (om-make-point 27 30) 4 "4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 394 110) (om-make-point 99 30) (list (list (quote a) (list (quote a) (quote b))) (list (quote b) (quote a))) "((a (a b)) (b a))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 339 131) (om-make-point 27 30) (quote a) "a" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "l-system" (quote ("elements" "l-system")) (quote ((om-load-inputfun (quote input-funbox) "" "axiom" nil) (om-load-inputfun (quote input-funbox) "" "rules" nil) (om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 322 174) (om-make-point 240 67) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 3 0 nil 0) (1 0 3 1 nil 0) (0 0 3 2 nil 0))) nil 7.01))
